<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UnitsNet.Mass</name>
    </assembly>
    <members>
        <member name="T:UnitsNet.Mass">
            <inheritdoc />
            <summary>
                In physics, mass (from Greek μᾶζα "barley cake, lump [of dough]") is a property of a physical system or body, giving rise to the phenomena of the body's resistance to being accelerated by a force and the strength of its mutual gravitational attraction with other bodies. Instruments such as mass balances or scales use those phenomena to measure mass. The SI unit of mass is the kilogram (kg).
            </summary>
        </member>
        <member name="F:UnitsNet.Mass._value">
            <summary>
                The numeric value this quantity was constructed with.
            </summary>
        </member>
        <member name="F:UnitsNet.Mass._unit">
            <summary>
                The unit this quantity was constructed with.
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.Value">
            <summary>
                The numeric value this quantity was constructed with.
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.Unit">
            <inheritdoc />
        </member>
        <member name="M:UnitsNet.Mass.#ctor(System.Double,UnitsNet.Units.MassUnit)">
            <summary>
                Creates the quantity with the given numeric value and unit.
            </summary>
            <param name="value">The numeric value to construct this quantity with.</param>
            <param name="unit">The unit representation to construct this quantity with.</param>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="P:UnitsNet.Mass.BaseUnit">
            <summary>
                The base unit of Duration, which is Second. All conversions go via this value.
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.MaxValue">
            <summary>
            Represents the largest possible value of Duration
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.MinValue">
            <summary>
            Represents the smallest possible value of Duration
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.Zero">
            <summary>
                Gets an instance of this quantity with a value of 0 in the base unit Second.
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.Centigrams">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.MassUnit.Centigram"/>
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.Decagrams">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.MassUnit.Decagram"/>
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.Decigrams">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.MassUnit.Decigram"/>
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.EarthMasses">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.MassUnit.EarthMass"/>
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.Grains">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.MassUnit.Grain"/>
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.Grams">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.MassUnit.Gram"/>
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.Hectograms">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.MassUnit.Hectogram"/>
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.Kilograms">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.MassUnit.Kilogram"/>
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.Kilopounds">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.MassUnit.Kilopound"/>
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.Kilotonnes">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.MassUnit.Kilotonne"/>
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.LongHundredweight">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.MassUnit.LongHundredweight"/>
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.LongTons">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.MassUnit.LongTon"/>
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.Megapounds">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.MassUnit.Megapound"/>
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.Megatonnes">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.MassUnit.Megatonne"/>
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.Micrograms">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.MassUnit.Microgram"/>
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.Milligrams">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.MassUnit.Milligram"/>
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.Nanograms">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.MassUnit.Nanogram"/>
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.Ounces">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.MassUnit.Ounce"/>
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.Pounds">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.MassUnit.Pound"/>
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.ShortHundredweight">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.MassUnit.ShortHundredweight"/>
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.ShortTons">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.MassUnit.ShortTon"/>
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.Slugs">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.MassUnit.Slug"/>
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.SolarMasses">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.MassUnit.SolarMass"/>
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.Stone">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.MassUnit.Stone"/>
            </summary>
        </member>
        <member name="P:UnitsNet.Mass.Tonnes">
            <summary>
                Gets a <see cref="T:System.Double"/> value of this quantity converted into <see cref="F:UnitsNet.Units.MassUnit.Tonne"/>
            </summary>
        </member>
        <member name="M:UnitsNet.Mass.FromCentigrams(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.Mass"/> from <see cref="F:UnitsNet.Units.MassUnit.Centigram"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.Mass.FromDecagrams(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.Mass"/> from <see cref="F:UnitsNet.Units.MassUnit.Decagram"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.Mass.FromDecigrams(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.Mass"/> from <see cref="F:UnitsNet.Units.MassUnit.Decigram"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.Mass.FromEarthMasses(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.Mass"/> from <see cref="F:UnitsNet.Units.MassUnit.EarthMass"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.Mass.FromGrains(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.Mass"/> from <see cref="F:UnitsNet.Units.MassUnit.Grain"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.Mass.FromGrams(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.Mass"/> from <see cref="F:UnitsNet.Units.MassUnit.Gram"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.Mass.FromHectograms(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.Mass"/> from <see cref="F:UnitsNet.Units.MassUnit.Hectogram"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.Mass.FromKilograms(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.Mass"/> from <see cref="F:UnitsNet.Units.MassUnit.Kilogram"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.Mass.FromKilopounds(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.Mass"/> from <see cref="F:UnitsNet.Units.MassUnit.Kilopound"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.Mass.FromKilotonnes(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.Mass"/> from <see cref="F:UnitsNet.Units.MassUnit.Kilotonne"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.Mass.FromLongHundredweight(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.Mass"/> from <see cref="F:UnitsNet.Units.MassUnit.LongHundredweight"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.Mass.FromLongTons(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.Mass"/> from <see cref="F:UnitsNet.Units.MassUnit.LongTon"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.Mass.FromMegapounds(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.Mass"/> from <see cref="F:UnitsNet.Units.MassUnit.Megapound"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.Mass.FromMegatonnes(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.Mass"/> from <see cref="F:UnitsNet.Units.MassUnit.Megatonne"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.Mass.FromMicrograms(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.Mass"/> from <see cref="F:UnitsNet.Units.MassUnit.Microgram"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.Mass.FromMilligrams(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.Mass"/> from <see cref="F:UnitsNet.Units.MassUnit.Milligram"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.Mass.FromNanograms(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.Mass"/> from <see cref="F:UnitsNet.Units.MassUnit.Nanogram"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.Mass.FromOunces(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.Mass"/> from <see cref="F:UnitsNet.Units.MassUnit.Ounce"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.Mass.FromPounds(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.Mass"/> from <see cref="F:UnitsNet.Units.MassUnit.Pound"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.Mass.FromShortHundredweight(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.Mass"/> from <see cref="F:UnitsNet.Units.MassUnit.ShortHundredweight"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.Mass.FromShortTons(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.Mass"/> from <see cref="F:UnitsNet.Units.MassUnit.ShortTon"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.Mass.FromSlugs(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.Mass"/> from <see cref="F:UnitsNet.Units.MassUnit.Slug"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.Mass.FromSolarMasses(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.Mass"/> from <see cref="F:UnitsNet.Units.MassUnit.SolarMass"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.Mass.FromStone(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.Mass"/> from <see cref="F:UnitsNet.Units.MassUnit.Stone"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.Mass.FromTonnes(System.Double)">
            <summary>
                Creates a <see cref="T:UnitsNet.Mass"/> from <see cref="F:UnitsNet.Units.MassUnit.Tonne"/>.
            </summary>
            <exception cref="T:System.ArgumentException">If value is NaN or Infinity.</exception>
        </member>
        <member name="M:UnitsNet.Mass.From(System.Double,UnitsNet.Units.MassUnit)">
            <summary>
                Dynamically convert from value and unit enum <see cref="T:UnitsNet.Units.MassUnit" /> to <see cref="T:UnitsNet.Mass" />.
            </summary>
            <param name="value">Value to convert from.</param>
            <param name="fromUnit">Unit to convert from.</param>
            <returns>Mass unit value.</returns>
        </member>
        <member name="M:UnitsNet.Mass.As(UnitsNet.Units.MassUnit)">
            <summary>
                Convert to the unit representation <paramref name="unit" />.
            </summary>
            <returns>Value converted to the specified unit.</returns>
        </member>
        <member name="M:UnitsNet.Mass.ToUnit(UnitsNet.Units.MassUnit)">
            <summary>
                Converts this Duration to another Duration with the unit representation <paramref name="unit" />.
            </summary>
            <returns>A Duration with the specified unit.</returns>
        </member>
        <member name="M:UnitsNet.Mass.GetValueInBaseUnit">
            <summary>
                Converts the current value + unit to the base unit.
                This is typically the first step in converting from one unit to another.
            </summary>
            <returns>The value in the base unit representation.</returns>
        </member>
        <member name="F:UnitsNet.Units.MassUnit.EarthMass">
            <summary>
                Earth mass is a ratio unit to the mass of planet Earth.
            </summary>
            <remarks>https://en.wikipedia.org/wiki/Earth_mass</remarks>
        </member>
        <member name="F:UnitsNet.Units.MassUnit.Grain">
            <summary>
                A grain is a unit of measurement of mass, and in the troy weight, avoirdupois, and Apothecaries' system, equal to exactly 64.79891 milligrams.
            </summary>
            <remarks>https://en.wikipedia.org/wiki/Grain_(unit)</remarks>
        </member>
        <member name="F:UnitsNet.Units.MassUnit.LongHundredweight">
            <summary>
                The long or imperial hundredweight (abbreviation cwt) is a unit of mass equal to 112 pounds in US and Canada.
            </summary>
            <remarks>https://en.wikipedia.org/wiki/Hundredweight</remarks>
        </member>
        <member name="F:UnitsNet.Units.MassUnit.LongTon">
            <summary>
                Long ton (weight ton or Imperial ton) is a unit of mass equal to 2,240 pounds (1,016 kg) and is the name for the unit called the "ton" in the avoirdupois or Imperial system of measurements that was used in the United Kingdom and several other Commonwealth countries before metrication.
            </summary>
            <remarks>http://en.wikipedia.org/wiki/Long_ton</remarks>
        </member>
        <member name="F:UnitsNet.Units.MassUnit.Ounce">
            <summary>
                An ounce (abbreviated oz) is usually the international avoirdupois ounce as used in the United States customary and British imperial systems, which is equal to one-sixteenth of a pound or approximately 28 grams. The abbreviation 'oz' derives from the Italian word onza (now spelled oncia).
            </summary>
            <remarks>http://en.wikipedia.org/wiki/Ounce</remarks>
        </member>
        <member name="F:UnitsNet.Units.MassUnit.Pound">
            <summary>
                The pound or pound-mass (abbreviations: lb, lbm) is a unit of mass used in the imperial, United States customary and other systems of measurement. A number of different definitions have been used, the most common today being the international avoirdupois pound which is legally defined as exactly 0.45359237 kilograms, and which is divided into 16 avoirdupois ounces.
            </summary>
        </member>
        <member name="F:UnitsNet.Units.MassUnit.ShortHundredweight">
            <summary>
                The short hundredweight (abbreviation cwt) is a unit of mass equal to 100 pounds in US and Canada. In British English, the short hundredweight is referred to as the "cental".
            </summary>
            <remarks>https://en.wikipedia.org/wiki/Hundredweight</remarks>
        </member>
        <member name="F:UnitsNet.Units.MassUnit.ShortTon">
            <summary>
                The short ton is a unit of mass equal to 2,000 pounds (907.18474 kg), that is most commonly used in the United States – known there simply as the ton.
            </summary>
            <remarks>http://en.wikipedia.org/wiki/Short_ton</remarks>
        </member>
        <member name="F:UnitsNet.Units.MassUnit.Slug">
            <summary>
                The slug (abbreviation slug) is a unit of mass that is accelerated by 1 ft/s² when a force of one pound (lbf) is exerted on it.
            </summary>
            <remarks>http://en.wikipedia.org/wiki/Slug_(unit)</remarks>
        </member>
        <member name="F:UnitsNet.Units.MassUnit.SolarMass">
            <summary>
                Solar mass is a ratio unit to the mass of the solar system star, the sun.
            </summary>
            <remarks>https://en.wikipedia.org/wiki/Solar_mass</remarks>
        </member>
        <member name="F:UnitsNet.Units.MassUnit.Stone">
            <summary>
                The stone (abbreviation st) is a unit of mass equal to 14 pounds avoirdupois (about 6.35 kilograms) used in Great Britain and Ireland for measuring human body weight.
            </summary>
            <remarks>http://en.wikipedia.org/wiki/Stone_(unit)</remarks>
        </member>
    </members>
</doc>
